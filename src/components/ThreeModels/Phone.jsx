/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 static/models/phone.glb -o src/components/ThreeModels/Phone.jsx 
*/

import React, { useRef } from 'react'
import { Loader, useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber';
import { LinearFilter, Mesh, MeshBasicMaterial, MeshLambertMaterial, PlaneGeometry, RepeatWrapping, TextureLoader, Vector2 } from 'three';

export default function Phone({ screenImage, props }) {
  const { nodes, materials } = useGLTF('/models/phone.glb')

  const texture = useLoader(TextureLoader, screenImage);
  /* texture.wrapS = 2;
  texture.wrapT = 2; */
  // texture.center.set(0, 0)
  // texture.repeat.set(3.75, 3.75);
  // texture.rotation = -(Math.PI / 2);
  // texture.flipY = false;
  texture.generateMipmaps = false;
  texture.minFilter = LinearFilter;
  texture.needsUpdate = true;
  const screen = new MeshLambertMaterial({
    map: texture,

  });
  const white = new MeshBasicMaterial({ color: '#ffffff' });
  // materials.Screen = screen;
  console.log('nodes', nodes)
  nodes.LineArt.material = white;
  nodes.Cube_1.geometry = new PlaneGeometry(0.9, 2.0);
  // nodes.Cube_1.material = screen;
  return (
    <group {...props} dispose={null}>
      <group scale={[1.016, 1.145, 1.016]}>
        <mesh geometry={nodes.Cube.geometry} material={materials.Material} />
        <mesh geometry={nodes.Cube_1.geometry} material={screen} rotation={[0, Math.PI / 2, 0]} scale={[0.92, 0.92, 0.92]} />
        <mesh geometry={nodes.Cube_2.geometry} material={materials.Screen} />
        <mesh geometry={nodes.Cube001.geometry} material={materials.Material} position={[-0.042, 0.256, 0.47]} rotation={[Math.PI / 2, Math.PI / 2, 0]} scale={[0.371, 0.008, 0.433]} />
        <mesh geometry={nodes.Cube002.geometry} material={materials.Material} position={[-0.043, 0.072, 0.469]} rotation={[Math.PI / 2, Math.PI / 2, 0]} scale={[0.371, 0.008, 0.433]} />
        <mesh geometry={nodes.Cylinder002.geometry} material={materials['Lense 1']} position={[-0.109, 0.836, -0.291]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={[0.433, 0.009, 0.433]}>
          <mesh geometry={nodes.Cylinder003.geometry} material={materials.Lense} position={[0, 0, 0.52]} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/phone.glb')
